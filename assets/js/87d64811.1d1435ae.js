"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[972],{8621:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=r(5893),i=r(1151);const o={sidebar_position:1},s="On pose les bases !",a={id:"SPRING/tutorial-basics/first-step",title:"On pose les bases !",description:"Cr\xe9ation du projet",source:"@site/docs/SPRING/tutorial-basics/first-step.md",sourceDirName:"SPRING/tutorial-basics",slug:"/SPRING/tutorial-basics/first-step",permalink:"/goyavebrave69.github.io/docs/SPRING/tutorial-basics/first-step",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/SPRING/tutorial-basics/first-step.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"SPRING - Basics",permalink:"/goyavebrave69.github.io/docs/category/spring---basics"},next:{title:"Base de donn\xe9e et JPA",permalink:"/goyavebrave69.github.io/docs/SPRING/tutorial-basics/db-and-jpa"}},c={},l=[{value:"Cr\xe9ation du projet",id:"cr\xe9ation-du-projet",level:2},{value:"Cr\xe9ons l\u2019architecture de notre APP !",id:"cr\xe9ons-larchitecture-de-notre-app-",level:2},{value:"Gestion d&#39;erreurs dans le controller",id:"gestion-derreurs-dans-le-controller",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"on-pose-les-bases-",children:"On pose les bases !"}),"\n",(0,t.jsx)(n.h2,{id:"cr\xe9ation-du-projet",children:"Cr\xe9ation du projet"}),"\n",(0,t.jsxs)(n.p,{children:["Dans un premier temps nous allons cr\xe9er un nouveau projet, pour ce faire vous connaissez la chanson : ",(0,t.jsx)(n.a,{href:"https://start.spring.io/",children:"https://start.spring.io/"})]}),"\n",(0,t.jsx)(n.p,{children:"On choisit spring web JPA & mysql comme d\xe9pendences."}),"\n",(0,t.jsx)(n.p,{children:"On ouvre le projet dans intellij IDE, on choisit le SKD 21, puis on build"}),"\n",(0,t.jsxs)(n.p,{children:["lance la commande mvn spring-boot",":run"]}),"\n",(0,t.jsx)(n.h2,{id:"cr\xe9ons-larchitecture-de-notre-app-",children:"Cr\xe9ons l\u2019architecture de notre APP !"}),"\n",(0,t.jsx)(n.p,{children:"Comme vous le savez, nous allons cr\xe9er un back pour un blog, notre architecture \xe0 sa plus haute contiendra le nom des grandes features. Commencer par cr\xe9er un package Article, qui contiendra lui ainsi que tout les futurs packages m\xe8res 3 dossiers."}),"\n",(0,t.jsx)(n.p,{children:"Nous allonrs cr\xe9er 3 dossiers, qui correspondent dans le jargon \xe0 des Layers (couches) :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"application (partie qui va nous servir \xe0 communiquer avec notre app : Request & Response)"}),"\n",(0,t.jsx)(n.li,{children:"domain (le core de notre application qui contient notre logique m\xe9tier)"}),"\n",(0,t.jsx)(n.li,{children:"infrastructure (la logique dont nous avons besoin pour run notre application)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"A l\u2019int\xe9rieur de notre package application, nous allons y cr\xe9er notre controller qui contiendra les methodes de notre CRUD"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"package com.crud.demo.article.application;\n\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n@RestController\npublic class ArticleController {\n\n    @GetMapping('/articles')\n    List<Article> readAll () {}\n\n    @GetMapping('/articles/{id}')\n    Article readOne (@PathVariable Long id) {}\n\n    @PostMapping('/articles')\n    Article create (@RequestBody Article newArticle) {}\n\n    @PutMapping('/articles/{id}')\n    Article edit (@RequestBody Article newArticle, @PathVariable Long id) {}\n\n    @DeleteMapping('/articles/{id}')\n    Article delete (@PathVariable Long id) {}\n    \n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@RestController"}),"\xa0indicates that the data returned by each method will be written straight into the response body instead of rendering a template."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Maintenant, cr\xe9eons dans le dossier domain un package Entity et ajoutons-lui cette Entity Article qui va repr\xe9senter notre objet article"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"package com.crud.demo.article.domain.Entity;\n\npublic class Article {\n    private Long id;\n    private string title;\n    private string description;\n    private LocalDateTime createdAt;\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Nous avons besoin d\u2019un repository pour g\xe9rer la communication avec la base de donn\xe9e.\n\xc0 ton avis, o\xf9 est-ce que devrait figurer notre ArticleRepository ?"}),"\n",(0,t.jsx)(n.p,{children:"Dans le dossier infrastructure pardi !"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"package com.crud.demo.article.infrastructure.repository;\n\nimport com.crud.demo.article.domain.Article;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface ArticleRepository extends JpaRepository<Article, Long> {\n    \n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Nous allons nous servir de notre Repository dans notre controller, pour ce faire \u21d2 une petite injection s\u2019impose \ud83d\udc89\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import com.crud.demo.article.infrastructure.repository.ArticleRepository;\n\npublic class ArticleController {\n\n    private final ArticleRepository repository;\n\n    ArticleController(ArticleRepository repository) {\n        this.repository = repository;\n    }\n//\n"})}),"\n",(0,t.jsx)(n.p,{children:"Mettons \xe0 jour le reste de notre controller"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'    @GetMapping("/articles")\n    List<Article> readAll () {\n        return repository.findAll();\n    }\n\n    @GetMapping("/articles/{id}")\n    Article readOne (@PathVariable Long id) {\n        return repository.findById(id)\n                .orElseThrow(() -> new ArticleNotFoundException(id));;\n    }\n\n    @PostMapping("/articles")\n    Article create (@RequestBody Article newArticle) {\n        return repository.save(newArticle);\n    }\n\n    @PutMapping("/articles/{id}")\n    Article edit (@RequestBody Article newArticle, @PathVariable Long id) {\n        return repository.findById(id)\n                .map(article -> {\n                    article.setTitle(newArticle.getTitle());\n                    article.setDescription(newArticle.getDescription());\n                    return repository.save(article);\n                })\n                .orElseGet(() -> {\n                    newArticle.setId(id);\n                    return repository.save(newArticle);\n                });\n    }\n\n    @DeleteMapping("/articles/{id}")\n    void delete (@PathVariable Long id) {\n        repository.deleteById(id);\n    }\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["An\xa0",(0,t.jsx)(n.code,{children:"ArticleRepository"}),"\xa0is injected by constructor into the controller."]}),"\n",(0,t.jsxs)(n.li,{children:["We have routes for each operation (",(0,t.jsx)(n.code,{children:"@GetMapping"}),",\xa0",(0,t.jsx)(n.code,{children:"@PostMapping"}),",\xa0",(0,t.jsx)(n.code,{children:"@PutMapping"}),"\xa0and\xa0",(0,t.jsx)(n.code,{children:"@DeleteMapping"}),", corresponding to HTTP\xa0",(0,t.jsx)(n.code,{children:"GET"}),",\xa0",(0,t.jsx)(n.code,{children:"POST"}),",\xa0",(0,t.jsx)(n.code,{children:"PUT"}),", and\xa0",(0,t.jsx)(n.code,{children:"DELETE"}),"\xa0calls). (NOTE: It\u2019s useful to read each method and understand what they do.)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ArticleNotFoundException"}),"\xa0is an exception used to indicate when an article is looked up but not found."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"gestion-derreurs-dans-le-controller",children:"Gestion d'erreurs dans le controller"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ArticleNotFoundException"})," mais d\u2019o\xf9 vient ce truc ?!\nNous souhaitons pouvoir g\xe9rer la mani\xe8re dont les erreurs sont envoy\xe9es, pour ce faire nous allons cr\xe9er deux classes : ",(0,t.jsx)(n.code,{children:"ArticleNotFoundException"})," ainsi que ",(0,t.jsx)(n.code,{children:"ArticleNotFoundAdvice"})]}),"\n",(0,t.jsx)(n.p,{children:"La package infrastructure contiendra un nouveau package nomm\xe9 exception qui aura le r\xf4le d\u2019accueillir toutes les classes en lien avec les erreurs."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'package com.crud.demo.article.infrastructure.exception;\n\npublic class ArticleNotFoundException extends RuntimeException {\n    ArticleNotFoundException(Long id) {\n        super("Could not find article with id " + id);\n    }\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"package com.crud.demo.article.infrastructure.exception;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.ControllerAdvice;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.ResponseBody;\nimport org.springframework.web.bind.annotation.ResponseStatus;\n\n@ControllerAdvice\nclass ArticleNotFoundAdvice {\n\n    @ResponseBody\n    @ExceptionHandler(ArticleNotFoundException.class)\n    @ResponseStatus(HttpStatus.NOT_FOUND)\n    String articleNotFoundHandler(ArticleNotFoundException ex) {\n        return ex.getMessage();\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>s});var t=r(7294);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);