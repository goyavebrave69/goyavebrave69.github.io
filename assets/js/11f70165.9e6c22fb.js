"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[494],{8601:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var s=r(5893),i=r(1151);const t={sidebar_position:1},o="Cours n\xb01",a={id:"SPRING/spring-security/security-one",title:"Cours n\xb01",description:"SPRING SECURITY BROOOO \ud83d\udd10\ud83d\ude94",source:"@site/docs/SPRING/spring-security/security-one.md",sourceDirName:"SPRING/spring-security",slug:"/SPRING/spring-security/security-one",permalink:"/docs/SPRING/spring-security/security-one",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/SPRING/spring-security/security-one.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"SPRING - security",permalink:"/docs/category/spring---security"},next:{title:"Cours n\xb02",permalink:"/docs/SPRING/spring-security/security-two"}},l={},c=[{value:"SPRING SECURITY BROOOO \ud83d\udd10\ud83d\ude94",id:"spring-security-broooo-",level:2},{value:"\xc9tape 1 : Commen\xe7ons par ajouter la d\xe9pendance \xe0 notre pom.xml",id:"\xe9tape-1--commen\xe7ons-par-ajouter-la-d\xe9pendance-\xe0-notre-pomxml",level:2},{value:"\xc9tape 2: Mod\xe8le et service utilisateur",id:"\xe9tape-2-mod\xe8le-et-service-utilisateur",level:2},{value:"Model",id:"model",level:3},{value:"Repository",id:"repository",level:3},{value:"UserDetailsServiceImpl",id:"userdetailsserviceimpl",level:3}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"cours-n1",children:"Cours n\xb01"}),"\n",(0,s.jsx)(n.h2,{id:"spring-security-broooo-",children:"SPRING SECURITY BROOOO \ud83d\udd10\ud83d\ude94"}),"\n",(0,s.jsx)(n.p,{children:"C\u2019est l\u2019heure de jouer les FLICS du web \ud83d\ude4c."}),"\n",(0,s.jsx)(n.h2,{id:"\xe9tape-1--commen\xe7ons-par-ajouter-la-d\xe9pendance-\xe0-notre-pomxml",children:"\xc9tape 1 : Commen\xe7ons par ajouter la d\xe9pendance \xe0 notre pom.xml"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<dependencies>\n\t\x3c!-- ... other dependency elements ... --\x3e\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-security</artifactId>\n\t</dependency>\n   \n</dependencies>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\xe9tape-2-mod\xe8le-et-service-utilisateur",children:"\xc9tape 2: Mod\xe8le et service utilisateur"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"D\xe9finir une classe model User contenant les champs du User ainsi que son repo"}),"\n",(0,s.jsx)(n.li,{children:"Impl\xe9menter une interface UserDetailsService pour charger les d\xe9tails de l'utilisateur en fonction du nom d'utilisateur"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["On a dit DDD ! Donc on cr\xe9er un nouveau package ",(0,s.jsx)(n.code,{children:"auth"})," qui va contenir tout notre code en lien avec la security, et encore une fois \xe0 l\u2019int\xe9rieur du package nous aurons : application, domain, infrastructure."]}),"\n",(0,s.jsx)(n.h3,{id:"model",children:"Model"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'package com.crud.demo.auth.domain.entity;\n\nimport js.util.List;\n\n@Entity\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name = "first_name", nullable = false)\n    private String firstName;\n\n    @Column(name = "last_name", nullable = false)\n\n    private String lastName;\n\n    @Column(name = "username", nullable = false, unique = true)\n\n    private String username;\n\n    @Column(name = "email", nullable = false, unique = true)\n    private String email;\n\n    @Column(name = "password", nullable = false)\n    private String password;\n\n    @Column(name = "is_enabled", nullable = false)\n    private Boolean isEnabled;\n\n    @ManyToOne(cascade = CascadeType.MERGE, fetch = FetchType.EAGER)\n    @JoinColumn(name = "role_id")\n    private Role roles;\n\t\t\n\n// getters and setters\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Mhhh tiens tiens qu\u2019est-ce que l\u2019on remarque ici ?? Une petite relation je crois hein !\nC\u2019est parti ajoutons cette classe ",(0,s.jsx)(n.code,{children:"Role"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"@Entity\npublic class Role {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String type;\n\n    public Role() {\n    }\n\n    public Role(String type) {\n        this.type = type; // ADMIN, USER, ...\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"repository",children:"Repository"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"package com.crud.demo.auth.infrastructure.repository;\n\nimport com.crud.demo.auth.domain.entity.User;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface UserRepository  extends JpaRepository<User, Long> { }\n"})}),"\n",(0,s.jsx)(n.h3,{id:"userdetailsserviceimpl",children:"UserDetailsServiceImpl"}),"\n",(0,s.jsxs)(n.p,{children:["Maintenant on cr\xe9er un package service \xe0 l\u2019int\xe9rieur du ",(0,s.jsx)(n.code,{children:"domain"})," avec une class UserDetailsServiceImpl qui implements UserDetailService."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"package com.crud.demo.auth.domain.service;\n\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\n\npublic class UserDetailsServiceImpl implements UserDetailsService {\n\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        return null;\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"C\u2019est ici que l\u2019on va coder la fonction qui va nous permettre de r\xe9cup\xe9rer l\u2019utilisateur si il existe bien, dans le cas contraire, une erreur sera renvoy\xe9e."}),"\n",(0,s.jsx)(n.p,{children:"Commen\xe7ons donc par \ud83d\udc89 notre repository  puis allons chercher ce fameux user par son Username"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"private final UserRepository userRepository;\n\nUserDetailsServiceImpl(UserRepository userRepository) {\n      this.userRepository = userRepository;\n}\n\n@Override\npublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n\n      return userRepository.findByUsername(username);\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"public interface UserRepository extends JpaRepository<User, Long> {\n    User findByUsername(String username);\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Sauf que\u2026 Si on regarde juste notre IDE on voit qu\u2019il y a un probl\xe8me ",(0,s.jsx)(n.code,{children:"Required Type : UserDetails"})," , car ici la fonction attend un return de type UserDetails, l\xe0 o\xf9 on retourne directement un User."]}),"\n",(0,s.jsx)(n.p,{children:"Nous allons donc devoir cr\xe9er une classe qui va nous permettre de construire un objet de type UserDetails avec les informations de mon User."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"package com.crud.demo.auth.domain.entity;\n\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\n\nimport js.util.ArrayList;\nimport js.util.Collection;\nimport js.util.List;\n\npublic class UserPrincipal implements UserDetails {\n\n    private final User user;\n    \n\t\tUserPrincipal(User user) {\n        this.user = user;\n    }\n\n    @Override\n    public Collection<? extends GrantedAuthority> getAuthorities() {\n        List<GrantedAuthority> authorities = new ArrayList<>();\n        for (String role: user.getRoles()) {\n            authorities.add(new SimpleGrantedAuthority(role));\n        }\n        return authorities;\n    }\n\n    @Override\n    public String getPassword() {\n        return user.getPassword();\n    }\n\n    @Override\n    public String getUsername() {\n        return user.getUsername();\n    }\n\n    @Override\n    public boolean isAccountNonExpired() {\n        return false;\n    }\n\n    @Override\n    public boolean isAccountNonLocked() {\n        return false;\n    }\n\n    @Override\n    public boolean isCredentialsNonExpired() {\n        return false;\n    }\n\n    @Override\n    public boolean isEnabled() {\n        return user.getEnabled();\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"D\xe9sormais nous allons return une petite instance de cette classe dans notre loadUserByUsername"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"@Override\npublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n\n   return new UserPrincipal(userRepository.findByUsername(username));\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>o});var s=r(7294);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);